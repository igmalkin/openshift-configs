apiVersion: flows.netobserv.io/v1beta2
kind: FlowCollector
metadata:
  annotations:
    flows.netobserv.io/flowcollectorlegacy-namespace: netobserv
    flows.netobserv.io/flpparent-namespace: netobserv
  name: cluster
spec:
  networkPolicy:
    additionalNamespaces: []
    enable: false
  loki:
    advanced:
      staticLabels:
        app: netobserv-flowcollector
      writeMaxBackoff: 5s
      writeMaxRetries: 2
      writeMinBackoff: 1s
    writeTimeout: 10s
    microservices:
      ingesterUrl: 'http://loki-distributor:3100/'
      querierUrl: 'http://loki-query-frontend:3100/'
      tenantID: netobserv
      tls:
        caCert:
          namespace: ''
        enable: false
        insecureSkipVerify: false
        userCert:
          namespace: ''
    enable: true
    mode: LokiStack
    manual:
      authToken: Disabled
      ingesterUrl: 'http://loki:3100/'
      querierUrl: 'http://loki:3100/'
      statusTls:
        caCert:
          namespace: ''
        enable: false
        insecureSkipVerify: false
        userCert:
          namespace: ''
      tenantID: netobserv
      tls:
        caCert:
          namespace: ''
        enable: false
        insecureSkipVerify: false
        userCert:
          namespace: ''
    lokiStack:
      name: loki
    readTimeout: 30s
    monolithic:
      tenantID: netobserv
      tls:
        caCert:
          certFile: service-ca.crt
          name: loki-gateway-ca-bundle
          namespace: ''
          type: configmap
        enable: false
        insecureSkipVerify: false
        userCert:
          namespace: ''
      url: 'http://loki.netobserv.svc:3100/'
    writeBatchWait: 1s
    writeBatchSize: 10485760
  deploymentModel: Direct
  agent:
    ebpf:
      logLevel: info
      metrics:
        server:
          port: 9400
          tls:
            insecureSkipVerify: false
            type: Disabled
      cacheMaxFlows: 100000
      resources:
        limits:
          memory: 800Mi
        requests:
          cpu: 100m
          memory: 50Mi
      sampling: 50
      imagePullPolicy: IfNotPresent
      privileged: true
      excludeInterfaces:
        - lo
      kafkaBatchSize: 1048576
      cacheActiveTimeout: 5s
      interfaces: []
      features:
        - UDNMapping
    ipfix:
      cacheActiveTimeout: 20s
      cacheMaxFlows: 400
      clusterNetworkOperator:
        namespace: openshift-network-operator
      forceSampleAll: false
      ovnKubernetes:
        containerName: ovnkube-node
        daemonSetName: ovnkube-node
        namespace: ovn-kubernetes
      sampling: 400
    type: eBPF
  kafka:
    address: kafka-cluster-kafka-bootstrap.netobserv
    sasl:
      clientIDReference:
        namespace: ''
      clientSecretReference:
        namespace: ''
      type: Disabled
    tls:
      caCert:
        certFile: ca.crt
        name: kafka-cluster-cluster-ca-cert
        namespace: ''
        type: secret
      enable: false
      insecureSkipVerify: false
      userCert:
        certFile: user.crt
        certKey: user.key
        name: flp-kafka
        namespace: ''
        type: secret
    topic: network-flows
  prometheus:
    querier:
      enable: true
      manual:
        forwardUserToken: false
        tls:
          caCert:
            namespace: ''
          enable: false
          insecureSkipVerify: false
          userCert:
            namespace: ''
        url: 'http://prometheus:9090'
      mode: Auto
      timeout: 30s
  consolePlugin:
    logLevel: info
    advanced:
      port: 9001
      register: true
    enable: true
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 100m
        memory: 50Mi
    portNaming:
      enable: true
      portNames:
        '3100': loki
    quickFilters:
      - default: true
        filter:
          flow_layer: '"app"'
        name: Applications
      - filter:
          flow_layer: '"infra"'
        name: Infrastructure
      - default: true
        filter:
          dst_kind: '"Pod"'
          src_kind: '"Pod"'
        name: Pods network
      - filter:
          dst_kind: '"Service"'
        name: Services network
    imagePullPolicy: IfNotPresent
    autoscaler:
      maxReplicas: 3
      metrics:
        - resource:
            name: cpu
            target:
              averageUtilization: 50
              type: Utilization
          type: Resource
      minReplicas: 1
      status: Disabled
    replicas: 1
  processor:
    logLevel: info
    advanced:
      conversationEndTimeout: 10s
      conversationHeartbeatInterval: 30s
      conversationTerminatingTimeout: 5s
      dropUnusedFields: true
      enableKubeProbes: true
      healthPort: 8080
      port: 2055
    metrics:
      disableAlerts: []
      server:
        port: 9401
        tls:
          insecureSkipVerify: false
          type: Disabled
    resources:
      limits:
        memory: 800Mi
      requests:
        cpu: 100m
        memory: 100Mi
    clusterName: ''
    multiClusterDeployment: false
    deduper:
      mode: Disabled
      sampling: 50
    kafkaConsumerQueueCapacity: 1000
    imagePullPolicy: IfNotPresent
    kafkaConsumerAutoscaler:
      maxReplicas: 0
      status: Disabled
    logTypes: Flows
    kafkaConsumerReplicas: 3
    subnetLabels: {}
    kafkaConsumerBatchSize: 10485760
  exporters: []
  namespace: netobserv
